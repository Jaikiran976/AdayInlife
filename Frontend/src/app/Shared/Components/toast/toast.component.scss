@use 'sass:color';
@use 'colors' as *;
@use 'breakpoints' as *;

.toast {
    position: fixed;
    top: 80px;
    left: 50%;
    transform: translateX(-50%) translateY(0); // Start neutral
    background-color: $primary-color;
    color: $bg-color;
    padding: 0.5rem 1.25rem;
    font-size: $font-size-sm;
    border-radius: 6px;
    opacity: 1;
    z-index: 10000;
    text-align: center;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    animation: fadeUpOffset 2s ease-in-out forwards;
    pointer-events: none;

    &.success {
        background-color: $success-color; // Define this in your `colors.scss`
        color: $bg-color;
    }

    &.warning {
        background-color: $warning-color; // Also define in `colors.scss`
        color: $bg-color;
    }

    &.error {
        background-color: $error-color; // Same here
        color: $bg-color;
    }
}

@keyframes fadeUpOffset {
    0% {
        opacity: 1;
        transform: translateX(-50%) translateY(0);
    }

    80% {
        opacity: 0.8;
        transform: translateX(-50%) translateY(-10px);
    }

    100% {
        opacity: 0;
        transform: translateX(-50%) translateY(-20px);
    }
}

:host-context([data-theme="dark"]) {
    .toast {
        background-color: $dark-primary-color;
        color: $dark-text-color;

        &.success {
            background-color: color.scale($success-color, $lightness: -20%);
            color: $dark-text-color;
        }

        &.warning {
            background-color: color.scale($warning-color, $lightness: -20%);
            color: $dark-text-color;
        }

        &.error {
            background-color: color.scale($error-color, $lightness: -20%);
            color: $dark-text-color;
        }
    }
}